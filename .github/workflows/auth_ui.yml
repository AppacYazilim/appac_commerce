name: Cloudflare Pages Build
on:
  pull_request:
    branches:
      - main
      - production
  push:
    branches:
      - main
      - production

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: "yarn"
      - name: Install the dependencies
        run: yarn install --pure-lockfile
      - name: Build React Bundle
        run: yarn build
      - name: Upload the artifact
        uses: actions/upload-artifact@master
        with:
          name: react-bundle
          path: build
  preview:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref != 'refs/heads/main' && github.ref != 'refs/heads/production'
    environment:
      name: Preview
      url: ${{ steps.get-deployment.outputs.url }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: "yarn"
      - name: Install the dependencies
        run: yarn install --pure-lockfile
      - name: Download the artifact
        uses: actions/download-artifact@master
        with:
          name: react-bundle
          path: build
      - name: Publish
        uses: cloudflare/wrangler-action@2.0.0
        with:
          apiToken: ${{ secrets.CLOUDFLARE_ACCESS }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: pages publish build --project-name=appaccommerce --branch $GITHUB_HEAD_REF --commit-hash $GITHUB_SHA --commit-dirty false
      - name: Get Deployment
        id: get-deployment
        run: node tools/get_cf_url.js ${{ secrets.CLOUDFLARE_ACCESS }} ${{ secrets.CLOUDFLARE_ACCOUNT_ID }} $GITHUB_SHA
  staging:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    environment:
      name: Staging
      url: ${{ steps.get-deployment.outputs.url }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: "yarn"
      - name: Install the dependencies
        run: yarn install --pure-lockfile
      - name: Download the artifact
        uses: actions/download-artifact@master
        with:
          name: react-bundle
          path: build
      - name: Publish
        uses: cloudflare/wrangler-action@2.0.0
        with:
          apiToken: ${{ secrets.CLOUDFLARE_ACCESS }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: pages publish build --project-name=appaccommerce --branch $GITHUB_HEAD_REF --commit-hash $GITHUB_SHA --commit-dirty false
      - name: Get Deployment
        id: get-deployment
        run: node tools/get_cf_url.js ${{ secrets.CLOUDFLARE_ACCESS }} ${{ secrets.CLOUDFLARE_ACCOUNT_ID }} $GITHUB_SHA
  production:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/production'
    environment:
      name: Production
      url: ${{ steps.get-deployment.outputs.url }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: "yarn"
      - name: Install the dependencies
        run: yarn install --pure-lockfile
      - name: Download the artifact
        uses: actions/download-artifact@master
        with:
          name: react-bundle
          path: build
      - name: Publish
        uses: cloudflare/wrangler-action@2.0.0
        with:
          apiToken: ${{ secrets.CLOUDFLARE_ACCESS }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: pages publish build --project-name=appaccommerce --branch $GITHUB_HEAD_REF --commit-hash $GITHUB_SHA --commit-dirty false
      - name: Get Deployment
        id: get-deployment
        run: node tools/get_cf_url.js ${{ secrets.CLOUDFLARE_ACCESS }} ${{ secrets.CLOUDFLARE_ACCOUNT_ID }} $GITHUB_SHA